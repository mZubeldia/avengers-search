{"version":3,"sources":["images/marvel1.jpg","components/Header.js","components/FilterByName.js","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/Footer.js","services/api.js","services/localStorage.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","imgHeader","alt","title","FilterByName","props","type","name","id","value","filterName","placeholder","onChange","ev","handleFilter","target","key","Filters","onClick","preventDefault","CharacterCard","to","heroData","image","heroName","CharacterList","characterElement","heros","length","map","hero","CharacterDetail","console","log","bio","Footer","getMarvelData","fetch","then","response","json","data","results","thumbnail","path","extension","description","comics","objToExport","get","defaultData","localStorage","getItem","JSON","parse","set","setItem","stringify","App","useState","localSt","setHeros","setFilterName","useEffect","filteredHeros","filter","toLowerCase","includes","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8df0ea43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marvel1.17250cca.jpg\";","import imgHeader from \"../images/marvel1.jpg\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"header-text\">Marvel Search</h1>\r\n      <img\r\n        className=\"header-img\"\r\n        src={imgHeader}\r\n        alt=\"Marvel Search\"\r\n        title=\"Marvel Search\"\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const FilterByName = (props) => {\r\n  const handleName = (ev) => {\r\n    //función para pasar los datos limpios a App\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <input\r\n      className=\"form__input name\"\r\n      type=\"text\"\r\n      name=\"name\"\r\n      id=\"name\"\r\n      value={props.filterName}\r\n      placeholder=\"Character's name\"\r\n      onChange={handleName}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import FilterByName from \"./FilterByName\";\r\n\r\nconst Filters = (props) => {\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n  return (\r\n    <form className=\"main__form\" onClick={handleForm}>\r\n      <FilterByName\r\n        filterName={props.filterName}\r\n        handleFilter={props.handleFilter}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link to={`/character/${props.heroData.id}`}>\r\n      <article className=\"character__list-item\">\r\n        <img\r\n          className=\"character-pic\"\r\n          src={props.heroData.image}\r\n          alt={props.heroData.heroName}\r\n        />\r\n\r\n        <h2 className=\"character-name\">{props.heroData.heroName}</h2>\r\n        {/*<p className=\"character-species\">{props.heroData.comics}</p>*/}\r\n      </article>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","import CharacterCard from \"./CharacterCard\";\r\n\r\nconst CharacterList = (props) => {\r\n  let characterElement = \"\";\r\n\r\n  if (props.heros.length !== 0) {\r\n    characterElement = props.heros.map((hero) => {\r\n      return (\r\n        <li className=\"character__list__item\" key={hero.id}>\r\n          <CharacterCard heroData={hero} />\r\n        </li>\r\n      );\r\n    });\r\n  } else {\r\n    characterElement = <h2>Character not found</h2>;\r\n  }\r\n  return (\r\n    <section className=\"results-section\">\r\n      <ul className=\"character__list\">{characterElement}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  console.log(props.hero);\r\n  return (\r\n    <main className=\"card-detail-container\">\r\n      <Link className=\"return-link\" to=\"/\">\r\n        Go back\r\n      </Link>\r\n      <div className=\"main-detail\">\r\n        <section className=\"mid-section-card-left\">\r\n          <img src={props.heroData.image} alt={props.heroData.heroName} />\r\n        </section>\r\n        <section className=\"mid-section-card-right\">\r\n          <h2 className=\"detail-title\">{props.heroData.heroName}</h2>\r\n          <ul className=\"list-detail\">\r\n            <li className=\"list-detail__item\">\r\n              Bio:\r\n              {props.heroData.bio}\r\n            </li>\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","const Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <small className=\"footer__rights\">\r\n        <span className=\"rights__item\">&copy;2021</span>\r\n      </small>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","/*\r\ngeneral: id, nombre, img, nº de cómics\r\ndetalle: id, nombre, img, nº de cómics, bio\r\n*/\r\n\r\nconst getMarvelData = () => {\r\n  const urlAPI =\r\n    \"https://gateway.marvel.com:443/v1/public/characters?ts=1&apikey=6464e55f4ddd129f74ccf08944a6d607&hash=21cb4015a6c6ae718eab1dc032803fce\";\r\n  return fetch(urlAPI)\r\n    .then((response) => response.json())\r\n    .then((json) => {\r\n      const cleanData = json.data.results.map((hero) => {\r\n        return {\r\n          heroName: hero.name,\r\n          id: hero.id,\r\n          image: hero.thumbnail.path + \".\" + hero.thumbnail.extension,\r\n          bio: hero.description,\r\n          comics: hero.comics,\r\n        };\r\n      });\r\n      //console.log(json.data.results);\r\n      //console.log(cleanData);\r\n      return cleanData;\r\n    });\r\n};\r\n\r\nexport default getMarvelData;\r\n","const set = (key, value) => {\r\n  //tengo que asignar nuevo nombre y el elemento que quiero guardar\r\n  //función\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst get = (key, defaultData) => {\r\n  //solo recibe nombre que yo le he asignado\r\n  //función\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    //condición\r\n    return defaultData; //defaultData equivale a un array vacío en app, función en la const charactersLocalStData\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst objToExport = {\r\n  get: get,\r\n  set: set,\r\n};\r\nexport default objToExport;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n//estilos\nimport \"../stylesheet/App.scss\";\nimport \"../stylesheet/reset.scss\";\n\n//estructura web\nimport Header from \"./Header\";\nimport Filters from \"./Filters\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Footer from \"./Footer\";\n\n//servicios\nimport getMarvelData from \"../services/api\";\nimport localSt from \"../services/localStorage\";\n\nconst App = () => {\n  //estados\n\n  const [heros, setHeros] = useState(localSt.get(\"heros\", [])); // estado de datos y llamo a localStorage para que recoja los datos de characters\n  const [filterName, setFilterName] = useState(localSt.get(\"filterName\", \"\"));\n\n  //effects\n  useEffect(() => {\n    if (heros.length === 0) {\n      //si el array de personajes está vacío, llama a la API\n      getMarvelData().then((heroData) => {\n        setHeros(heroData);\n      });\n    }\n  }, []);\n  console.log(heros);\n\n  //event handlers\n\n  const handleFilter = (data) => {\n    //función general para todos los filtros\n\n    if (data.key === \"name\") {\n      setFilterName(data.value);\n    }\n  };\n\n  //render - pintado\n\n  const filteredHeros = heros.filter((hero) => {\n    return hero.heroName.toLowerCase().includes(filterName.toLowerCase());\n  });\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <main className=\"main\">\n            <Filters handleFilter={handleFilter} filterName={filterName} />\n            <CharacterList heros={filteredHeros} />\n          </main>\n        </Route>\n        <Route>\n          <CharacterDetail />\n        </Route>\n\n        {/*<Route path=\"*\" component={CharacterNotFound} />*/}\n      </Switch>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}